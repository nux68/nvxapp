lanciare in:
Package manage console  (root soluzione)

crea
dotnet ef migrations add InitDB  -v --context nvxapp.server.data.Infrastructure.ApplicationDbContext --project nvxapp.server.data --startup-project nvxapp.server\nvxapp.server.csproj
dotnet ef migrations add MyTable  -v --context nvxapp.server.data.Infrastructure.ApplicationDbContext --project nvxapp.server.data --startup-project nvxapp.server\nvxapp.server.csproj

aggiorna db
dotnet ef database update --project nvxapp.server.data --startup-project nvxapp.server

aggiorna db alla migrazione specificata
dotnet ef database update InitDB --project nvxapp.server.data --startup-project nvxapp.server
dotnet ef database update MyTable --project nvxapp.server.data --startup-project nvxapp.server

cancella
dotnet ef migrations remove --project nvxapp.server.data --startup-project nvxapp.server

cancella tutte migrazioni a db
dotnet ef database update 0 --project nvxapp.server.data --startup-project nvxapp.server

lista delle migrazioni
dotnet ef migrations list --project nvxapp.server.data --startup-project nvxapp.server


//4 SCHEMA
ATTENZIONE IMPOSTARE in ogni migrazione
x:
	migrationBuilder.CreateTable(
		schema: SharedSchema._schema,
	migrationBuilder.CreateIndex(
		schema: SharedSchema._schema,
	table.ForeignKey(
		principalSchema: SharedSchema._schema,

x semplificare lo sviluppo conviene fare una migrazione che stia solo su public o solo su gli altri schemi